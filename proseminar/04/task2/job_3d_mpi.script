#!/bin/bash

# Execute job in the queue "std.q" unless you have special requirements.
#$ -q std.q

# The batch system should use the current directory as working directory.
#$ -cwd

# Name your job. Unless you use the -o and -e options, output will
# go to a unique file name.ojob_id for each job.
#$ -N my_test_job

# Redirect output stream to this file.
#$ -o output_3d_mpi.dat

# Join the error stream to the output stream.
#$ -j yes

#$ -pe openmpi-8perhost 16

module load openmpi/3.1.1

echo "ranks 16; n 50"
mpiexec -n 16 ./heat_stencil_3D_slabs 50
echo "ranks 16; n 100"
mpiexec -n 16 ./heat_stencil_3D_slabs 100
echo "ranks 16; n 150"
mpiexec -n 16 ./heat_stencil_3D_slabs 150
echo "ranks 8; n 50"
mpiexec -n 8 ./heat_stencil_3D_slabs 50
echo "ranks 8; n 100"
mpiexec -n 8 ./heat_stencil_3D_slabs 100
echo "ranks 8; n 150"
mpiexec -n 8 ./heat_stencil_3D_slabs 150
echo "ranks 4; n 50"
mpiexec -n 4 ./heat_stencil_3D_slabs 50
echo "ranks 4; n 100"
mpiexec -n 4 ./heat_stencil_3D_slabs 100
echo "ranks 4; n 150"
mpiexec -n 4 ./heat_stencil_3D_slabs 150
echo "ranks 1; n 50"
mpiexec -n 1 ./heat_stencil_3D_slabs 50
echo "ranks 1; n 100"
mpiexec -n 1 ./heat_stencil_3D_slabs 100
echo "ranks 1; n 100"
mpiexec -n 1 ./heat_stencil_3D_slabs 150
